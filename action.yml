name: Update release with the paths each PR changed
author: FreeAgent
description: Updates a release to add the changed paths to lists of PRs
inputs:
  release-id:
    description: Which release to add affected paths to PRs listed in the release's body
    required: true
  path-prefix-parts:
    description: How much of the path to add (default is 2)
    default: 2
  exclude-pattern:
    description: Matches paths to not list as affected by a PR
outputs:
  body:
    description: The rewritten body of the release
    value: ${{ steps.rewrite-release.outputs.body }}

runs:
  using: composite
  steps:
    - name: Rewrite release
      shell: bash
      id: rewrite-release
      run: |
        exec 19> >( sed -e's/^/::debug::/g' )
        BASH_XTRACEFD=19
        export DEBUG=api
        set -x

        function files_changed() {
          local pr="$1"
          local cut_until="${2:-2}"
          local exclude_pattern="$3"
          gh api repos/"${{ github.repository }}/pulls/$pr/files" --jq .[].filename 2>&19 |
            ( grep / || true ) |
            if [ -n "$exclude_pattern" ]
            then
              ( grep -v -E "$exclude_pattern" || true )
            else
              cat
            fi |
            cut -f"1-$cut_until" -d/ |
            sort -u |
            sed -e"s/.*/\`&\`/" |
            paste -s -d, - |
            sed -e"s/\`,\`/\`, \`/g"
        }

        function add_files_to_release_notes() {
          local cut_until="${1:-2}"
          local exclude_pattern="$2"
            while read -r line
            do
              pr=$(echo "$line" | ( grep '(#[[:digit:]]*)' || true ) | sed -e's/.*(#\(.*\)).*/\1/' )
              if [ -n "$pr" ]
              then
                files="$(files_changed "$pr" "$cut_until" "$exclude_pattern" | sed -e's@/@\\/@g')"
                if [ -n "$files" ]
                then
                  # add the paths changed to the PR's list entry
                  # preserve the list entry marker, usually * but could be -
                  line="$( echo "$line" | sed -e"s/^[-*] /&$files /")"
                fi
              fi
              echo "$line"
            done
        }

        RELEASE_URL="repos/${{ github.repository }}/releases/${{inputs.release-id }}"
        gh api "$RELEASE_URL" --jq .body 2>&19 |
        add_files_to_release_notes "${{ inputs.path-prefix-parts }}" "${{ inputs.exclude-pattern }}" |
          gh api -X PATCH "$RELEASE_URL" 2>&19 \
            --field body=@- \
            --field tag_name="$( gh api "$RELEASE_URL" --jq .tag_name 2>&19 )" |
          jq .body | # escaped, but with quotes
          xargs -I% echo "body="% >> "$GITHUB_OUTPUT"
